<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>false</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>PUT</http_method>
        <name>jobrun</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

	var myError = new sn_ws_err.ServiceError();
	var data = request.body.data;
	gs.info('PUT jobrun: ' + JSON.stringify(data));
	var idRun = data.sys_id;	
	var grRun = new GlideRecord('x_108443_sndml_action_run');
	if (!idRun || !grRun.get(idRun)) {
		myError.setStatus(404); // Not Found
		myError.setMessage('Job Run Not Found ' + idRun);
		myError.setDetail('Job Run Not Found ' + idRun);
		return myError;
	}
	else {
		var oldStatus = grRun.getValue('status').toLowerCase();
		var newStatus = data.status ? data.status.toLowerCase() : '';
		var number = grRun.getValue('number');
		var cancelled = (oldStatus=='cancelled');
		var failed = (oldStatus=='failed');
		if (cancelled || failed) {
			// If it is cancelled or failed, we still update the metrics, just not the status
			data.status = oldStatus;
			gs.warn('PUT jobrun ' + grRun.number + ': CANCEL DETECTED');
		}
		var result = new x_108443_sndml.Util().putRunStatus(data);
		response.setBody(result);
		gs.debug('PutRunStatus response: ' + JSON.stringify(result));
		if ((cancelled || failed) && (newStatus != oldStatus)) {			
			myError.setStatus(410); // Gone
			myError.setMessage(number + ' has been cancelled');
			myError.setDetail(number + ' has been cancelled');
			return myError;
		}
		// check that the status was actually updated
		else if (newStatus && !newStatus.equalsIgnoreCase(result.status)) {
			myError.setStatus(403); // Forbidden
			myError.setMessage('Not Updated');
			myError.setDetail(number + ' status not updated');
			// gs.error(gs.getMessage('PUT jobrun NOT UPDATED {0}', [data.sys_id]));
			return myError;
		}
		else {
			response.setStatus(200);
		}
	}

})(request, response);]]></operation_script>
        <operation_uri>/api/x_108443_sndml/jobrunconfig</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>gflewis</sys_created_by>
        <sys_created_on>2024-06-23 17:09:48</sys_created_on>
        <sys_id>efcc0b9493430210299e7fbcebba10fa</sys_id>
        <sys_mod_count>16</sys_mod_count>
        <sys_name>jobrun</sys_name>
        <sys_package display_value="DataPump" source="x_108443_sndml">f2e68ad32f7d60103152c886f699b6fb</sys_package>
        <sys_policy/>
        <sys_scope display_value="DataPump">f2e68ad32f7d60103152c886f699b6fb</sys_scope>
        <sys_update_name>sys_ws_operation_efcc0b9493430210299e7fbcebba10fa</sys_update_name>
        <sys_updated_by>gflewis</sys_updated_by>
        <sys_updated_on>2024-08-11 16:51:39</sys_updated_on>
        <web_service_definition display_value="JobRunConfig">8faccb5493430210299e7fbcebba10ff</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
